USE IIML_NC;

-- -----------------------------------------------------
-- TABLE TENANT
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS TENANT
(
   ID           INT NOT NULL AUTO_INCREMENT,
   TENANTDESC   VARCHAR(45) NULL,
   TENANT_ID    VARCHAR(45) NOT NULL,
   CREATED_DATE datetime,
   EXPIRED_DATE datetime,
   UNIQUE INDEX TENANT_ID_UNIQUE(TENANT_ID ASC),
   PRIMARY KEY(ID)
);

-- -----------------------------------------------------
-- TABLE TERM-COURSE
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS TERM
(
   ID          INT NOT NULL AUTO_INCREMENT,
   TERMCODE    VARCHAR(45) NOT NULL,
   TENANT_ID   VARCHAR(45) NOT NULL,
    CREATED_DATE datetime,
   EXPIRED_DATE datetime,
   PRIMARY KEY(ID),
   UNIQUE INDEX TERMCODE_UNIQUE(TERMCODE ASC),
   INDEX `TERM_TENANT_ID_idx` (`TENANT_ID` ASC),
   CONSTRAINT `TERM_TENANT_ID` FOREIGN KEY
      (`TENANT_ID`)
      REFERENCES `IIML_NC`.`TENANT`(`TENANT_ID`)
         ON DELETE NO ACTION
         ON UPDATE NO ACTION
);





-- -----------------------------------------------------
-- TABLE SUBJECT
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS SUBJECT
(
   ID             INT NOT NULL AUTO_INCREMENT,
   SUBJECTCODE    VARCHAR(45) NOT NULL,
   SUBJECT_NAME   VARCHAR(45) NOT NULL,
   TERMCODE       VARCHAR(45) NOT NULL,
    CREATED_DATE datetime,
   EXPIRED_DATE datetime,
   TENANT_ID      VARCHAR(45) NOT NULL,
   PRIMARY KEY(ID),
   UNIQUE INDEX SUB_TERM_TENA(SUBJECTCODE, TERMCODE, TENANT_ID),
   CONSTRAINT TERMCODE_FK FOREIGN KEY(TERMCODE) REFERENCES TERM(TERMCODE),
   CONSTRAINT SUBJECT_TENANT_ID_FK FOREIGN KEY(TENANT_ID)
   REFERENCES TENANT(TENANT_ID)
);


-- -----------------------------------------------------
-- TABLE ROLES
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS ROLES
(
   ID         INT NOT NULL,
   ROLENAME   VARCHAR(45) NULL,
   PRIMARY KEY(ID),
   UNIQUE INDEX ROLENAME_UNIQUE(ROLENAME ASC)
);

INSERT INTO ROLES(ID, ROLENAME)
VALUES (1, 'ROLE_ADMIN');

INSERT INTO ROLES(ID, ROLENAME)
VALUES (2, 'ROLE_STUDENT');


-- -----------------------------------------------------
-- Table USERS
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS USERS (
  ID INT NOT NULL AUTO_INCREMENT,
  USERID VARCHAR(45) NOT NULL,
  USER_TYPE INT NOT NULL,
  FIRSTNAME    VARCHAR(45) NULL,
  MIDDLENAME   VARCHAR(45) NULL,
  LASTNAME     VARCHAR(45) NULL,
  CREATED_DATE datetime,
  EXPIRED_DATE datetime,
  TENANT_ID    VARCHAR(45) NULL,
  PRIMARY KEY (ID),
  UNIQUE INDEX USERID_UNIQUE (USERID ASC));

  
  -- -----------------------------------------------------
-- TABLE STUDENT_REGISTRATION
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS REGISTRATION
(
   ID                    INT NOT NULL AUTO_INCREMENT,
   TENANT_ID             VARCHAR(45) NULL,
   TERMCODE              VARCHAR(45) NULL,
   OPEN_DATE             DATETIME NULL,
   CLOSE_DATE             DATETIME NULL,
   STATUS                VARCHAR(45) NULL,
   PRIMARY KEY(ID),
   CONSTRAINT ST_REGISTRATION_TENANT FOREIGN KEY(TENANT_ID) REFERENCES TENANT(TENANT_ID),
   CONSTRAINT ST_REGISTRATION_TERMCODE FOREIGN KEY(TERMCODE) REFERENCES TERM(TERMCODE),
   UNIQUE INDEX REG_TERM_TENA(TENANT_ID,TERMCODE)
);


-- -----------------------------------------------------
-- TABLE STUDENT_REGISTRATION
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS REG_FORM
(
   ID                    INT NOT NULL AUTO_INCREMENT,
   USERID                VARCHAR(45) NOT NULL,
   REGISTRATION_ID       INT,
   REGISTRATION_DATE      DATETIME NOT NULL,
   BANKNAME              VARCHAR(156) NOT NULL,
   BANK_TRANSACTION_ID   VARCHAR(156) NOT NULL,
   TRANSACTIONDATE       DATETIME NOT NULL,
   STATUS                VARCHAR(45) NULL,
   PRIMARY KEY(ID),
   UNIQUE INDEX BANK_TRANSACTION_ID_UNIQUE(USERID,REGISTRATION_ID),
   CONSTRAINT REG_ID FOREIGN KEY(REGISTRATION_ID) REFERENCES REGISTRATION(ID)
);


CREATE TABLE IF NOT EXISTS CONFIG
(
   ID           INT NOT NULL AUTO_INCREMENT,
   PROPERTY_NAME   VARCHAR(256) NOT NULL,
   PROPERTY_VALUE    VARCHAR(512) NOT NULL,
   PRIMARY KEY(ID)
);


INSERT INTO CONFIG(PROPERTY_NAME, PROPERTY_VALUE)
VALUES ('CALLBACK_URI', 'http://localhost:8080/gyan/home');

-- -----------------------------------------------------
-- TABLE USER_ROLE
-- -----------------------------------------------------

CREATE TABLE IF NOT EXISTS USER_ROLE
(
   ID       INT NOT NULL AUTO_INCREMENT,
   USERID   VARCHAR(45) NULL,
   ROLEID   INT NOT NULL,
   PRIMARY KEY(ID),
   INDEX USERID_IDX (USERID ASC),
   INDEX ROLEID_IDX (ROLEID ASC),
   CONSTRAINT USER_ROLE_ROLEID_FK FOREIGN KEY(ROLEID) REFERENCES ROLES(ID),
   CONSTRAINT USER_ROLE_USERID_FK FOREIGN KEY(USERID) REFERENCES USERS(USERID)
);